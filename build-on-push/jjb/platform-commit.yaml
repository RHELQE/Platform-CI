# Copyright 2016 Red Hat Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Template parameters:
#   * component: A name of a component for which this job is set up
#   * team-slave: A slave on which this job should run
#   * display-name: A human readable description of this job
#   * github-user: A GitHub user whose fork of 'platform-ci' will be used by the generated jobs
#   * platform-ci-branch: A branch of Platform CI repo from which the support
#       code is fetched
#   * staging-branch-doc-link: An <a></a> tag pair with a link to the staging
#       branch documentation.
#   * platform-ci-project-link: An <a></a> tag pair with a link to the
#       Platform CI project homepage
#   * distgit-root-url: A URL to the DistGit root

- defaults:
    name: 'ci-dispatcher-commit'
    description: |
        <p>This job is triggered whenever there are new commits in dist-git
        repository for the <strong>'{component}'</strong> component. The
        repository is polled approximately once per ten minutes. If a branch is
        a {staging-branch-doc-link}, or if the branch contains a
        <strong>ci.yaml</strong> file, a worker job will be triggered. A worker
        job then issues a Brew scratch build from the code in the changed
        branch.</p>

        <p><strong>Triggers</strong>: A worker job for a given branch.<br>
        <strong>Triggered by</strong>: A change in dist-git (by polling).<br>
        <strong>Controlled by</strong>: {platform-ci-project-link}. Do not edit this job via web UI.</p>

    concurrent: false
    node: '{team-slave}'
    display-name: '{display-name}'
    scm:
        - git:
            url: '{distgit-root-url}/{component}'
            basedir: '{component}'
            shallow-clone: true
    triggers:
        - pollscm: 'H/10 * * * *'
    builders:
        - shell: |
            if [ ! -d platform-ci ]
            then
              git clone https://github.com/{github-user}/platform-ci.git platform-ci
            fi
            pushd platform-ci
            git fetch origin
            git checkout origin/{platform-ci-branch}
            popd

            export PATH="$PATH:platform-ci/build-on-push/scripts"
            export PYTHONPATH="$PYTHONPATH:platform-ci/build-on-push/platform_ci"

            job-commit-dispatcher.sh "{component}" "$GIT_BRANCH" "{github-user}" "{platform-ci-branch}"
    wrappers:
        - default-ci-workflow-wrappers

- job-template:
    name: 'ci-{component}-dispatcher-commit'
    defaults: 'ci-dispatcher-commit'

# Parameters:
#   * component: A name of a component for which this job is set up
#   * team-slave: A slave on which this job should run
#   * display-name: A human readable description of this job
#   * git-branch: A dist-git branch of the component that this job will attempt to build
#   * platform-ci-branch: A branch of Platform CI repo from which the support code is fetched

#   * dispatcher-link: An <a> tag pair containing a link to the component's dispatcher job
#   * platform-ci-project-link: An <a></a> tag pair with a link to the Platform CI project homepage
#   * distgit-root-url: A URL to the DistGit root
#   * github-user: A GitHub user whose fork of 'platform-ci' will be used by the generated jobs

- defaults:
    name: 'ci-workflow-brew-build'
    description: |
      <p>This job is triggered by a {dispatcher-link} job whenever branch <strong>{git-branch}</strong>
      in dist-git repository for component <strong>{component}</strong> has new commits. This job then
      issues a Brew scratch build from branch <strong>{git-branch}</strong> to test whether changed code
      is buildable.</p>

      <p>The build is issued via the following command:</p>

      <p>$ rhpkg build --scratch --skip-nvr-check --target TARGET</p>

      <p><strong>Triggers:</strong> nothing<br>
      <strong>Triggered by:</strong> {dispatcher-link}<br>
      <strong>Controlled by:</strong> {platform-ci-project-link}. Do not edit this job via web UI.</p>
    concurrent: true
    node: '{team-slave}'
    display-name: '{display-name}'
    parameters:
        - string:
            name: BREW_TARGETS
            default: ''
            description: 'Space-separated list of brew targets'
    scm:
        - git:
            url: '{distgit-root-url}/{component}'
            branches:
                - '{git-branch}'
            basedir: '{component}'
            local-branch: '{git-branch}'
            shallow-clone: true
    builders:
        - shell: |
            if [ ! -d platform-ci ]
            then
                git clone https://github.com/{github-user}/platform-ci.git platform-ci
            fi
            pushd platform-ci
            git fetch origin
            git checkout origin/{platform-ci-branch}
            popd

            export PATH="$PATH:platform-ci/build-on-push/scripts"
            export PYTHONPATH="$PYTHONPATH:platform-ci/build-on-push/platform_ci"

            job-commit-worker.sh "{component}" "{git-branch}"
        - inject:
            properties-file: $WORKSPACE/VALUES.txt
    wrappers:
        - default-ci-workflow-wrappers
    publishers:
        - archive:
            artifacts: '*.log, *.txt'
            allow-empty: 'true'
        - email-ext:
            recipients: $NOTIFICATION_RECIPIENTS
            reply-to: $DEFAULT_REPLYTO
            content-type: default
            subject: 'CI: $PROJECT_NAME #$BUILD_NUMBER ($BUILD_STATUS)'
            body: ${{FILE,path="notification-email.txt"}}
            attach-build-log: false
            always: true
            unstable: true
            first-failure: true
            not-built: true
            aborted: true
            regression: true
            failure: true
            improvement: true
            still-failing: true
            success: false
            fixed: true
            still-unstable: true
            pre-build: false
            matrix-trigger: only-configurations
            send-to:
                - requester
                - recipients
