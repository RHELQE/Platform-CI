## This playbook sets up a basic ELK instance.  After execution,
## you will still need to create an index on the ELK instance
## and send logs to the ELK instance
#
## Note: To change kibana default loading page, modify
## kibana.defaultAppId: in /etc/kibana/kibana.yml. Example:
## kibana.defaultAppId: "dashboard/82470720-8e6a-11e7-bf16-955fd84ff7f6"

- hosts: localhost
  remote_user: root
  tasks:
  - name: Insert elk repo
    blockinfile:
      dest: /etc/yum.repos.d/elk.repo
      create: yes
      block: |
        [logstash-2.3]
        name=Logstash repository for 2.3.x packages
        baseurl=https://packages.elastic.co/logstash/2.3/centos
        gpgcheck=1
        gpgkey=https://packages.elastic.co/GPG-KEY-elasticsearch
        enabled=1
        [kibana-5.x]
        name=Kibana repository for 5.x packages
        baseurl=https://artifacts.elastic.co/packages/5.x/yum
        gpgcheck=1
        gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
        enabled=1
        autorefresh=1
        type=rpm-md
        [elasticsearch-5.x]
        name=Elasticsearch repository for 5.x packages
        baseurl=https://artifacts.elastic.co/packages/5.x/yum
        gpgcheck=1
        gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
        enabled=1
        autorefresh=1
        type=rpm-md
        [Epel]
        name=epel
        baseurl=http://dl.fedoraproject.org/pub/epel/7/x86_64/
        enabled=1
        gpgcheck=0
  - name: Do a yum clean all
    shell: yum clean all
  - name: Install necessary packages
    yum:
      pkg: "{{item}}"
      state: installed
    with_items:
     - logstash
     - kibana
     - elasticsearch
     - httpd
     - epel-release
     - nginx
     - httpd-tools
     - java
  - name: Change elasticsearch network host
    replace:
      dest: /etc/elasticsearch/elasticsearch.yml
      regexp: '# network.host{{ ":" }} 192.168.0.1'
      replace: ' network.host{{ ":" }} 0.0.0.0'
  - name: Need selinux to be permissive
    shell: setenforce 0
  - name: Put better nginx conf file in place
    template:
      dest: /etc/nginx/nginx.conf
      src: ./nginx.template
  - name: Create new nginx server definition
    blockinfile:
      dest: /etc/nginx/conf.d/kibana.conf
      create: yes
      block: |
        server {
          listen 80;

          server_name localhost;

          location / {
             proxy_pass http://localhost:5601;
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection 'upgrade';
             proxy_set_header Host $host;
             proxy_cache_bypass $http_upgrade;
          }
        }
  - name: Reload daemons with systemd
    shell: systemctl daemon-reload
  - name: Enable all the services
    shell: systemctl enable nginx.service elasticsearch.service kibana.service logstash.service
  - name: Start the services
    shell: systemctl start nginx.service elasticsearch.service kibana.service logstash.service
